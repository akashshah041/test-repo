#!/bin/bash

# Redirect output to stderr.
exec 1>&2

# Get list of staged files.
staged_files=$(git diff --cached --name-only)

# Arrays
a=("cz1" "rtg-site" "straddle-site" "rail-site" "zodiacbe-site" "zodiacbe6-site" "n4be-site" "promisbe-site" "expressbe-site" "oif-site" "sok" "mpm" "lms" "lad" "zvt" "lqn" "spct" "sou" "jact1" "jact2" "jact3" "jact4" "opsd1" "mns" "jed" "bct" "cau" "dar" "fsd")

b=(".unit.sql" ".oper.sql" ".config.sql" ".userconfig.sql" ".tml.sql" ".terminalconfig.sql" ".lgn-csv2.csv" ".lgn-csv1.csv" ".tms.sql" ".rail.sql")

# ANSI color codes
BLUE='\033[0;34m'  # Blue color
YELLOW='\033[1;33m'  # Yellow color
NC='\033[0m'       # No color
GREEN='\e[32m'     # Green Color
# Combine patterns from arrays a and b
patterns=()
for pattern_a in "${a[@]}"; do
    for pattern_b in "${b[@]}"; do
        pattern=".$pattern_a$pattern_b"
        patterns+=("$pattern")
    done
done

# Combine threedot from arrays a and b
threedotpatterns=()
for pattern_a in "${a[@]}"; do
    for pattern_b in "${b[@]}"; do
        threedotpatterns+=("$pattern_a$pattern_b")
    done
done

# Function to check if a filename has exactly two dots
hasExactlyTwoDots() {
    local fileName="$1"
    local dotCount=$(grep -o "\." <<< "$fileName" | wc -l)
    [ "$dotCount" -eq 2 ]
}

# Function to check if a filename has exactly three dots
hasExactlyThreeDots() {
    local fileName="$1"
    local dotCount=$(grep -o "\." <<< "$fileName" | wc -l)
    [ "$dotCount" -eq 3 ]
}

# Function to check if a filename contains no spaces
hasNoSpaces() {
    local fileName="$1"
    [[ "$fileName" != *" "* ]]
}

# Function to check if a filename matches any pattern in an array
matchesAnyPattern() {
    local fileName="$1"
    shift
    local patterns=("$@")    
    for pattern in "${patterns[@]}"; do
        if [[ "$fileName" == *"$pattern"* ]]; then
            return 0
        fi
    done   
    return 1
}


# Flag to indicate if any invalid filenames are found
invalid_files_found=0

while IFS= read -r file; do
    if [[ "$file" == db/patch/* ]]; then
        filename=$(basename "$file")
        echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
        echo -e "${BLUE}Processing file: $file${NC}"

        if hasExactlyThreeDots "$filename"; then
            if hasNoSpaces "$filename" && matchesAnyPattern "$filename" "${patterns[@]}"; then
                # Filename is valid (has exactly three dots, no spaces, and matches a pattern)
                echo "Valid filename: $filename"
                # Process the file as needed (e.g., commit the file)
            else
                if ! hasNoSpaces "$filename" && matchesAnyPattern "$filename" "${patterns[@]}"; then
                # Filename has exactly three dots but contains spaces or invalid suffix              
                echo -e "\nFilename contains spaces:\n\t$filename\n"
                echo -e "Commit aborted. Fix the above errors before committing.\n\nKindly follow below file name convention before committing file :-\n\n${GREEN}1. Check the filename as there will be space in filename${NC}\n\t eg.. <>$b\t| \tint75233- crane-activity-code-description-update$b\n${GREEN}"
                echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
                invalid_files_found=1
                elif hasNoSpaces "$filename" && matchesAnyPattern "$filename" "${threedotpatterns[@]}"; then
                # Filename has exactly three dots but contains spaces or invalid suffix              
                echo -e "\n${GREEN}1. Use one of the below site specific file extention pattern + db suffix base on site name.\n\nSite names are as below,${NC}"                
                echo "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                for ext1 in "${a[@]}"; do printf "<>.$ext1\t"; done
                echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                echo -e "\n${GREEN}\n\nDB Suffix are below,${NC}"                
                echo "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                for ext in "${b[@]}"; do printf "<>$ext\t"; done
                echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                echo -e  "\n${BLUE}If the site name is other then above list then reach out to administrator to add it in ~/.git/hooks/pre-commit file${NC}\n\n\t eg.. <>$patterns\t| \tint75233-crane-activity-code-description-update$patterns"
                echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
                invalid_files_found=1
                elif ! hasNoSpaces "$filename" && matchesAnyPattern "$filename" "${threedotpatterns[@]}"; then
                # Filename has exactly three dots but contains spaces or invalid suffix              
                echo -e "\nFilename either contains spaces or not having proper suffix:\n\t$filename\n"
                echo -e "Commit aborted. Fix the above errors before committing.\n\nKindly follow below file name convention before committing file :-\n\n${GREEN}1. Check the filename as there will be space in filename${NC}\n\t eg.. <>$b\t| \tint75233- crane-activity-code-description-update$b\n${GREEN}"
                echo -e "\n${GREEN}2. Use one of the below site specific file extention pattern + db suffix base on site name.\n\nSite names are as below,${NC}"                
                echo "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                for ext1 in "${a[@]}"; do printf "<>.$ext1\t"; done
                echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                echo -e "\n${GREEN}\n\nDB Suffix are below,${NC}"                
                echo "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                for ext in "${b[@]}"; do printf "<>$ext\t"; done
                echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                echo -e  "\n${BLUE}If the site name is other then above list then reach out to administrator to add it in ~/.git/hooks/pre-commit file${NC}\n\n\t eg.. <>$patterns\t| \tint75233-crane-activity-code-description-update$patterns"
                echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
                invalid_files_found=1                 
                else
                if hasNoSpaces "$filename"; then
                # Filename is invalid (contains spaces, extra dots, or invalid suffix)       
                echo -e "\nFilename contains invalid suffix value:\n\t$filename"
                echo -e "Commit aborted. Fix the above errors before committing.\n\nKindly follow one of the below file name convention before committing the file :-\n\n${GREEN}1. For non site specific, use one of the below two dot(..) file extension patterns${NC}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                for ext in "${b[@]}"; do printf "<>$ext\t"; done
                echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\t eg.. <>$b\t| \tint75233-crane-activity-code-description-update$b\n\n${GREEN}"
                echo -e "\n${GREEN}2. For site specific, use one of the below three dot(...) file extension patterns.\n\nSite names are as below,${NC}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                for ext1 in "${a[@]}"; do printf "<>$ext1\t"; done
                echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nIf the site name is other than the above list, then reach out to the administrator to add it in ~/.git/hooks/pre-commit file\n\n\t eg.. <>$patterns\t| \tint75233-crane-activity-code-description-update$patterns\n\n"
                echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
                invalid_files_found=1
                else
                # Filename is invalid (contains spaces, extra dots, or invalid suffix)       
                echo -e "\nFilename contains spaces or invalid suffix value:\n\t$filename"
                echo -e "Commit aborted. Fix the above errors before committing.\n\nKindly follow one of below file name convention before committing the file :-\n\n${GREEN}1. Ensure the filename contains no spaces${NC}\n\t eg.. <>$b\t| \tint75233- crane-activity-code-description-update$b\n\n${GREEN}2. For non site specific, use one of the below two dot(..) file extension patterns${NC}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                for ext in "${b[@]}"; do printf "<>$ext\t"; done
                echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\t eg.. <>$b\t| \tint75233-crane-activity-code-description-update$b\n\n${GREEN}"
                echo -e "\n${GREEN}3. For site specific, use one of the below three dot(...) file extension patterns.\n\nSite names are as below,${NC}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                for ext1 in "${a[@]}"; do printf "<>$ext1\t"; done
                echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nIf the site name is other than the above list, then reach out to the administrator to add it in ~/.git/hooks/pre-commit file\n\n\t eg.. <>$patterns\t| \tint75233-crane-activity-code-description-update$patterns\n\n"
                echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
                invalid_files_found=1
                fi
            fi            
        fi
        elif hasExactlyTwoDots "$filename"; then
            if hasNoSpaces "$filename" && matchesAnyPattern "$filename" "${b[@]}" && (! matchesAnyPattern "$filename" "${patterns[@]}"); then
                # Filename is valid (has exactly two dots, no spaces, and matches a pattern)
                echo "Valid filename: $filename"
                # Process the file as needed (e.g., commit the file)
            else
                if ! hasNoSpaces "$filename" && matchesAnyPattern "$filename" "${b[@]}"; then
                # Filename has exactly two dots but contains spaces or invalid suffix                
                echo -e "\nFilename contains space:\n\t$filename\n"
                echo -e "Commit aborted. Fix the above errors before committing.\n\nKindly follow below file name convention before committing file :-\n\n${GREEN}1. Check the filename as there will be  space in filename${NC}\n\t eg.. <>$b\t| \tint75233- crane-activity-code-description-update$b${GREEN}"
                echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
                invalid_files_found=1
                else
                if hasNoSpaces "$filename" && hasExactlyTwoDots "$filename"; then
                # Filename is invalid (contains spaces, extra dots, or invalid suffix)       
                echo -e "\nFilename contains invalid suffix value:\n\t$filename"
                echo -e "Commit aborted. Fix the above errors before committing.\n\nKindly follow below file name convention before committing the file :-\n\n${GREEN}1. For non site specific, use one of the below two dot(..) file extension patterns${NC}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                for ext in "${b[@]}"; do printf "<>$ext\t"; done
                echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\t eg.. <>$b\t| \tint75233-crane-activity-code-description-update$b\n\n${GREEN}"
                echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
                invalid_files_found=1
                else
                # Filename is invalid (contains spaces, extra dots, or invalid suffix)       
                echo -e "\nFilename contains spaces or invalid suffix value:\n\t$filename"
                echo -e "Commit aborted. Fix the above errors before committing.\n\nKindly follow below file name convention before committing the file :-\n\n${GREEN}1. Ensure the filename contains no spaces${NC}\n\t eg.. <>$b\t| \tint75233- crane-activity-code-description-update$b\n\n${GREEN}2. For non site specific, use one of the below two dot(..) file extension patterns${NC}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
                for ext in "${b[@]}"; do printf "<>$ext\t"; done
                echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
                invalid_files_found=1
                fi
            fi  
        fi
        elif hasNoSpaces "$filename" && (hasExactlyTwoDots "$filename" || hasExactlyThreeDots "$filename"); then
            for pattern in "${patterns[@]}" "${b[@]}"; do
                if [[ "$filename" == *"$pattern"* ]]; then
                    # Filename is valid (has exactly two or three dots and no spaces)
                    echo "Valid filename: $filename"
                    # Process the file as needed (e.g., commit the file)
                    break
                fi
            done
        else
            if hasNoSpaces "$filename"; then
            # Filename is invalid (contains spaces, extra dots, or invalid suffix)       
            echo -e "\nFilename contains invalid suffix value:\n\t$filename"
            echo -e "Commit aborted. Fix the above errors before committing.\n\nKindly follow one of the below file name convention before committing the file :-\n\n${GREEN}1. For non site specific, use one of the below two dot(..) file extension patterns${NC}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
            for ext in "${b[@]}"; do printf "<>$ext\t"; done
            echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\t eg.. <>$b\t| \tint75233-crane-activity-code-description-update$b\n\n${GREEN}"
            echo -e "\n${GREEN}2. For site specific, use one of the below three dot(...) file extension patterns.\n\nSite names are as below,${NC}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
            for ext1 in "${a[@]}"; do printf "<>$ext1\t"; done
            echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nIf the site name is other than the above list, then reach out to the administrator to add it in ~/.git/hooks/pre-commit file\n\n\t eg.. <>$patterns\t| \tint75233-crane-activity-code-description-update$patterns\n\n"
            echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
            invalid_files_found=1
            else
            # Filename is invalid (contains spaces, extra dots, or invalid suffix)       
            echo -e "\nFilename contains spaces or invalid suffix value:\n\t$filename"
            echo -e "Commit aborted. Fix the above errors before committing.\n\nKindly follow below file name convention before committing the file :-\n\n${GREEN}1. Ensure the filename contains no spaces${NC}\n\t eg.. <>$b\t| \tint75233- crane-activity-code-description-update$b\n\n${GREEN}2. For non site specific, use one of the below two dot(..) file extension patterns${NC}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
            for ext in "${b[@]}"; do printf "<>$ext\t"; done
            echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\t eg.. <>$b\t| \tint75233-crane-activity-code-description-update$b\n\n${GREEN}"
            echo -e "\n${GREEN}3. For site specific, use one of the below three dot(...) file extension patterns.\n\nSite names are as below,${NC}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
            for ext1 in "${a[@]}"; do printf "<>$ext1\t"; done
            echo -e "\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nIf the site name is other than the above list, then reach out to the administrator to add it in ~/.git/hooks/pre-commit file\n\n\t eg.. <>$patterns\t| \tint75233-crane-activity-code-description-update$patterns\n\n"
            echo -e "${YELLOW}\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
            invalid_files_found=1
            fi
        fi            
    fi
done <<< "$staged_files"

# Exit with appropriate status based on the presence of invalid files
if [ "$invalid_files_found" -eq 0 ]; then
    exit 0
else
    exit 1
fi
